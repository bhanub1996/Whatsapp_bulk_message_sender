import time
import os
import pathlib
import webbrowser as web
from datetime import datetime
from typing import Optional
from urllib.parse import quote
from platform import system
import pandas as pd

import pyautogui as pg

from pywhatkit.core import core, exceptions, log
from pyautogui import click, hotkey, press, size, typewrite

pg.FAILSAFE = False

core.check_connection()


def sendwhatmsg_instantly(
    phone_no: str,
    message: str,
    wait_time: int = 15,
    tab_close: bool = False,
    close_time: int = 3,
) -> None:
    """Send WhatsApp Message Instantly"""

    if not core.check_number(number=phone_no):
        raise exceptions.CountryCodeException("Country Code Missing in Phone Number!")

    web.open(f"https://web.whatsapp.com/send?phone={phone_no}&text={quote(message)}")
    time.sleep(4)
    pg.click(core.WIDTH / 2, core.HEIGHT / 2)
    time.sleep(wait_time - 4)
    pg.press("enter")
    log.log_message(_time=time.localtime(), receiver=phone_no, message=message)
    if tab_close:
        core.close_tab(wait_time=close_time)


def sendwhatmsg(
    phone_no: str,
    message: str,
    time_hour: int,
    time_min: int,
    wait_time: int = 15,
    tab_close: bool = False,
    close_time: int = 3,
) -> None:
    """Send a WhatsApp Message at a Certain Time"""

    if not core.check_number(number=phone_no):
        raise exceptions.CountryCodeException("Country Code Missing in Phone Number!")

    if time_hour not in range(25) or time_min not in range(60):
        raise Warning("Invalid Time Format!")

    current_time = time.localtime()
    left_time = datetime.strptime(
        f"{time_hour}:{time_min}:0", "%H:%M:%S"
    ) - datetime.strptime(
        f"{current_time.tm_hour}:{current_time.tm_min}:{current_time.tm_sec}",
        "%H:%M:%S",
    )

    if left_time.seconds < wait_time:
        raise exceptions.CallTimeException(
            "Call Time must be Greater than Wait Time as WhatsApp Web takes some Time to Load!"
        )

    sleep_time = left_time.seconds - wait_time
    print(
        f"In {sleep_time} Seconds WhatsApp will open and after {wait_time} Seconds Message will be Delivered!"
    )
    time.sleep(sleep_time)
    core.send_message(message=message, receiver=phone_no, wait_time=wait_time)
    log.log_message(_time=current_time, receiver=phone_no, message=message)
    if tab_close:
        core.close_tab(wait_time=close_time)


def sendwhatmsg_to_group(
    group_id: str,
    message: str,
    time_hour: int,
    time_min: int,
    wait_time: int = 15,
    tab_close: bool = False,
    close_time: int = 3,
) -> None:
    """Send WhatsApp Message to a Group at a Certain Time"""

    if time_hour not in range(25) or time_min not in range(60):
        raise Warning("Invalid Time Format!")

    current_time = time.localtime()
    left_time = datetime.strptime(
        f"{time_hour}:{time_min}:0", "%H:%M:%S"
    ) - datetime.strptime(
        f"{current_time.tm_hour}:{current_time.tm_min}:{current_time.tm_sec}",
        "%H:%M:%S",
    )

    if left_time.seconds < wait_time:
        raise exceptions.CallTimeException(
            "Call Time must be Greater than Wait Time as WhatsApp Web takes some Time to Load!"
        )

    sleep_time = left_time.seconds - wait_time
    print(
        f"In {sleep_time} Seconds WhatsApp will open and after {wait_time} Seconds Message will be Delivered!"
    )
    time.sleep(sleep_time)
    core.send_message(message=message, receiver=group_id, wait_time=wait_time)
    log.log_message(_time=current_time, receiver=group_id, message=message)
    if tab_close:
        core.close_tab(wait_time=close_time)




def sendwhatmsg_to_group_instantly(
    group_id: str,
    message: str,
    wait_time: int = 15,
    tab_close: bool = False,
    close_time: int = 3,
) -> None:
    """Send WhatsApp Message to a Group Instantly"""

    current_time = time.localtime()

    time.sleep(wait_time)
    core.send_message(message=message, receiver=group_id, wait_time=wait_time)
    log.log_message(_time=current_time, receiver=group_id, message=message)
    if tab_close:
        core.close_tab(wait_time=close_time)

def _web(receiver: str, message: str) -> None:
    """Opens WhatsApp Web based on the Receiver"""
    print(receiver,":",message)
    if check_number(number=receiver):
        open(
            "https://web.whatsapp.com/send?phone="
            + receiver
            + "&text="
            + quote(message)
        )
    else:
        open("https://web.whatsapp.com/accept?code=" + receiver)


def copy_image(path: str) -> None:
    """Copy the Image to Clipboard based on the Platform"""

    if system().lower() == "linux":
        if pathlib.Path(path).suffix in (".PNG", ".png"):
            os.system(f"copyq copy image/png - < {path}")
        elif pathlib.Path(path).suffix in (".jpg", ".JPG", ".jpeg", ".JPEG"):
            os.system(f"copyq copy image/jpeg - < {path}")
        else:
            raise Exception(
                f"File Format {pathlib.Path(path).suffix} is not Supported!"
            )
    elif system().lower() == "windows":
        from io import BytesIO

        import win32clipboard
        from PIL import Image

        image = Image.open(path)
        output = BytesIO()
        image.convert("RGB").save(output, "BMP")
        data = output.getvalue()[14:]
        output.close()
        win32clipboard.OpenClipboard()
        win32clipboard.EmptyClipboard()
        win32clipboard.SetClipboardData(win32clipboard.CF_DIB, data)
        win32clipboard.CloseClipboard()
    elif system().lower() == "darwin":
        if pathlib.Path(path).suffix in (".jpg", ".jpeg", ".JPG", ".JPEG"):
            os.system(
                f"osascript -e 'set the clipboard to (read (POSIX file \"{path}\") as JPEG picture)'"
            )
        else:
            raise Exception(
                f"File Format {pathlib.Path(path).suffix} is not Supported!"
            )
    else:
        raise Exception(f"Unsupported System: {system().lower()}")

def sendwhats_image(
    receiver: str,
    img_path: str,
    caption: str = "",
    wait_time: int = 15,
    tab_close: bool = False,
    close_time: int = 3,
) -> None:
    """Send Image to a WhatsApp Contact or Group at a Certain Time"""

    if (not receiver.isalnum()) and (not core.check_number(number=receiver)):
        raise exceptions.CountryCodeException("Country Code Missing in Phone Number!")

    current_time = time.localtime()
    core.send_image(
        path=img_path, caption=caption, receiver=receiver, wait_time=wait_time
    )
    log.log_image(_time=current_time, path=img_path, receiver=receiver, caption=caption)
    if tab_close:
        core.close_tab(wait_time=close_time)

def check_number(number: str) -> bool:
    """Checks the Number to see if contains the Country Code"""

    return "+" in number or "_" in number


def sendwhats_image_broadcast(        
    img_path: str,
    caption: str = "",
    wait_time: int = 15,
    tab_close: bool = False,
    close_time: int = 3,
) -> None:
    """Send Image to a WhatsApp Contact or Group at a Certain Time"""

    df = pd.read_csv("C:/Users/bhanu/Downloads/BULK MESSAGES.csv")
    # C:\Users\bhanu\Downloads\BULK MESSAGES.csv
    # C:\Users\bhanu\Downloads\


    caption = """🙏 

Elevate your financial journey! 😆🚀🌟
With
🎉💰 Money & Spirituality: A Gateway to Prosperity & Success
A 2-day Workshop
From QLU (Quantum Life University)
At
Life Foundation, Banjara Hills, Hyderabad. 


Click here 👇 to avail  details now
https://rzp.io/l/ZhDsHKCmZ 
"""

    for index, row in df.iterrows():
        print(row[0])
        caption = "Namaste "#+row[0]+caption
        # sendwhats_image("+919490913503", image_path, message)
        receiver = row[1]

        _web(message=caption, receiver=receiver)
        WIDTH, HEIGHT = size()

        time.sleep(7)
        click(WIDTH / 2, HEIGHT / 2)
        time.sleep(wait_time - 7)
        copy_image(path=img_path)
        if not check_number(number=receiver):
            for char in caption:
                if char == "\n":
                    hotkey("shift", "enter")
                else:
                    typewrite(char)
        else:
            typewrite(" ")
        if system().lower() == "darwin":
            hotkey("command", "v")
        else:
            hotkey("ctrl", "v")
        time.sleep(1)
        press("enter")

        if index == 1:
            break
    


def open_web() -> bool:
    """Opens WhatsApp Web"""

    try:
        web.open("https://web.whatsapp.com")
    except web.Error:
        return False
    else:
        return True

if __name__=="__main__":
    # df = pd.read_csv("C:/Users/bhanu/Downloads/BULK MESSAGES.csv")
    message = """🙏 

Elevate your financial journey! 😆🚀🌟
With
🎉💰 Money & Spirituality: A Gateway to Prosperity & Success
A 2-day Workshop
From QLU (Quantum Life University)
At
Life Foundation, Banjara Hills, Hyderabad. 


Click here 👇 to avail  details now
https://rzp.io/l/ZhDsHKCmZ 
"""

    image_path = "C:/Users/bhanu/Downloads/MS.jpg"

    sendwhats_image_broadcast(image_path)


    # for index, row in df.iterrows():
    #     message = "Namaste "+row['name']+message
    #     sendwhats_image("+919490913503", image_path, message)
    #     # sendwhats_image("row['phone'] +919490913503", "C:/Users/bhanu/Downloads/MS.jpg", "This is an automated image!")
    #     if index == 1:
    #         break
    


# import pywhatkit as pwk

# pwk.sendwhats_image("+919490913503", "C:/Users/bhanu/Downloads/MS.jpg", "This is an automated image!")
